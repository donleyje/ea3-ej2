#include <stdio.h>
#include <stdlib.h>
#include <time.h>

//Functions
int validn() {
//Loop to validate input n (n = columns and rows of matrix)
  int i, j, m, a, n;
  do {
    printf("Ingresa n\n");
    scanf("%d", &n);
    if(n<4){
      printf("\nn tiene que ser mayor a 3 y menor a 10\n\n");
    }
    if(n>9){
      printf("\nn tiene que ser mayor a 3 y menor a 10\n\n");
    }  
    } while (n<4 || n>9);
  
  return n;
}


int main() {
  int i, j, m, a, n;
  
  srand ( time(NULL) );

  n = validn(); //Call valid n function
  
  //Assign m the same value as n
  a = n;
  m = a;
  
  //Iniciate matrix
  float matrix[m][n];
  
  // Generate matrix with random values
  for(i = 0; i < m; i++){

    for(j = 0; j < n; j++){
      matrix[i][j] = (float)rand()/(float)(RAND_MAX/100);
      printf("%.2f  ",matrix[i][j]);
    }
    printf("\n");
  }
  printf("\n");
  
  // Find sum of all rows
  int sum, row, col, b = 0;
  int nrow[m];

  for (row = 0; row < m; ++row) {
    float sum = 0;
    for (col = 0; col < n; ++col) {
      sum += matrix[row][col];
    }
  
    nrow[b++] = sum;
    
  }

  //Find MAXIMUM sum of rows
  int trow = nrow[0];
  int irow = 0;
  for(i = 1; i < m; i++){

    if(trow < nrow[i]){
      trow = nrow[i];
      irow = i;
     
    }
  }

  //print each element of max row;
  int c, d;
   for(i = 0; i < n; i++){
      printf("%.2f  ", matrix[irow][i]);
    }

  //Print sum of maximum row
  for (row = 0; row < m; ++row) {
    float sum = 0;
    for (col = 0; col < n; ++col) {
      sum += matrix[row][col];
    }
    nrow[b++] = sum;

    if(row==irow){
      printf("= %.2f", sum);
    }

  }

  return 0;
}
